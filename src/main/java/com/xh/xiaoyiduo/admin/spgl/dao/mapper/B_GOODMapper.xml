<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xh.xiaoyiduo.admin.spgl.dao.B_GOODMapper" >
  <resultMap id="BaseResultMap" type="com.xh.xiaoyiduo.admin.spgl.pojo.B_GOOD" >
    <id column="GOOD_ID" property="goodId" jdbcType="VARCHAR" />
    <result column="SON_ID" property="sonId" jdbcType="VARCHAR" />
    <result column="GOOD_NAME" property="goodName" jdbcType="VARCHAR" />
    <result column="INFORMATION" property="information" jdbcType="VARCHAR" />
    <result column="ORIGIN_PRICE" property="originPrice" jdbcType="FLOAT" />
    <result column="SECOND_PRICE" property="secondPrice" jdbcType="FLOAT" />
    <result column="DEGREE" property="degree" jdbcType="VARCHAR" />
    <result column="COLLECT_NUMBER" property="collectNumber" jdbcType="DECIMAL" />
    <result column="GOOD_NUMBER" property="goodNumber" jdbcType="DECIMAL" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
  </resultMap>

  <resultMap id="GoodMap" type="com.xh.xiaoyiduo.admin.spgl.pojo.B_GOOD" >
  <id column="GOOD_ID" property="goodId" jdbcType="VARCHAR" />
  <result column="SON_ID" property="sonId" jdbcType="VARCHAR" />
  <result column="GOOD_NAME" property="goodName" jdbcType="VARCHAR" />
  <result column="INFORMATION" property="information" jdbcType="VARCHAR" />
  <result column="ORIGIN_PRICE" property="originPrice" jdbcType="FLOAT" />
  <result column="SECOND_PRICE" property="secondPrice" jdbcType="FLOAT" />
  <result column="DEGREE" property="degree" jdbcType="VARCHAR" />
  <result column="COLLECT_NUMBER" property="collectNumber" jdbcType="DECIMAL" />
  <result column="GOOD_NUMBER" property="goodNumber" jdbcType="DECIMAL" />
  <result column="STATUS" property="status" jdbcType="VARCHAR" />
  <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
  <collection property="imgUrlResource" ofType="com.xh.xiaoyiduo.admin.spgl.pojo.RESOURCES">
    <id column="RESOURCE_ID" property="resourceId"></id>
    <result column="TYPE" property="type"/>
    <result column="URL" property="url"/>
    <result column="SOURCE_ID" property="sourceId"/>
  </collection>
</resultMap>

<!--测试顺序-->
  <resultMap id="GoodMapSort" type="com.xh.xiaoyiduo.admin.spgl.pojo.B_GOOD" >
    <id column="GOOD_ID" property="goodId" jdbcType="VARCHAR" />
    <result column="SON_ID" property="sonId" jdbcType="VARCHAR" />
    <result column="GOOD_NAME" property="goodName" jdbcType="VARCHAR" />
    <result column="INFORMATION" property="information" jdbcType="VARCHAR" />
    <result column="ORIGIN_PRICE" property="originPrice" jdbcType="FLOAT" />
    <result column="SECOND_PRICE" property="secondPrice" jdbcType="FLOAT" />
    <result column="DEGREE" property="degree" jdbcType="VARCHAR" />
    <result column="COLLECT_NUMBER" property="collectNumber" jdbcType="DECIMAL" />
    <result column="GOOD_NUMBER" property="goodNumber" jdbcType="DECIMAL" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <!--一对多级联-->
    <collection property="imgUrlResource" column="GOOD_ID" select="com.xh.xiaoyiduo.admin.spgl.dao.ResourcesMapper.selectBySourceId"/>
  </resultMap>

  <!--测试一对多级联-->
  <resultMap id="TestGoodMap" type="com.xh.xiaoyiduo.admin.spgl.pojo.B_GOOD" >
    <id column="GOOD_ID" property="goodId" jdbcType="VARCHAR" />
    <result column="SON_ID" property="sonId" jdbcType="VARCHAR" />
    <result column="GOOD_NAME" property="goodName" jdbcType="VARCHAR" />
    <result column="INFORMATION" property="information" jdbcType="VARCHAR" />
    <result column="ORIGIN_PRICE" property="originPrice" jdbcType="FLOAT" />
    <result column="SECOND_PRICE" property="secondPrice" jdbcType="FLOAT" />
    <result column="DEGREE" property="degree" jdbcType="VARCHAR" />
    <result column="COLLECT_NUMBER" property="collectNumber" jdbcType="DECIMAL" />
    <result column="GOOD_NUMBER" property="goodNumber" jdbcType="DECIMAL" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <!--一对多级联-->
    <collection property="imgUrlResource" column="GOOD_ID" select="com.xh.xiaoyiduo.admin.spgl.dao.ResourcesMapper.selectBySourceId"/>
  </resultMap>

  <sql id="Base_Column_List" >
    GOOD_ID, SON_ID, GOOD_NAME, INFORMATION, ORIGIN_PRICE, SECOND_PRICE, DEGREE, COLLECT_NUMBER, 
    GOOD_NUMBER, STATUS, USER_ID
  </sql>

  <!--获取商品总数-->
  <select id="getGoodCount" resultType="int" parameterType="java.lang.String">
    select count(1) from b_good b, s_user s
    where b.user_id = s.user_id
    <if test="goodName != null">
      and b.good_name like concat('%',concat(#{goodName}, '%'))
    </if>
    <if test="nickname != null">
      and s.nickname like concat('%',concat(#{nickname}, '%'))
    </if>
    <if test="realName != null">
      and s.real_name like concat('%',concat(#{realName}, '%'))
    </if>
    <if test="userId != null">
      and b.user_id = #{userId,jdbcType=VARCHAR}
    </if>
  </select>

  <!--获取所有商品-->
  <select id="getAllGoods" resultMap="GoodMap" parameterType="java.lang.String">
    SELECT *
    FROM (SELECT r.*,ROWNUM rn
    FROM(
      select b.*
      from b_good b, s_user s
        where b.user_id = s.user_id
          <if test="goodName != null">
            and b.good_name like concat('%',concat(#{goodName}, '%'))
          </if>
          <if test="nickname != null">
            and s.nickname like concat('%',concat(#{nickname}, '%'))
          </if>
          <if test="realName != null">
            and s.real_name like concat('%',concat(#{realName}, '%'))
          </if>
          <if test="userId != null">
            and b.user_id = #{userId,jdbcType=VARCHAR}
          </if>
      order by b.create_time desc
    ) r
    where ROWNUM &lt;= #{pageSize} * #{currentPage}
    ) WHERE rn > #{pageSize} * ( #{currentPage} - 1)
  </select>

  <!--获取对应子类商品列表-->
  <select id="getSonGoodList" resultMap="GoodMapSort" parameterType="java.lang.String" >

    select t.* from (SELECT *
    FROM (SELECT r.*,ROWNUM rn
    FROM(
    select b.* from B_GOOD b
    <if test="sonId != null">
      where son_id = #{sonId,jdbcType=VARCHAR}
    </if>
    <if test="goodName != null">
      where good_Name
      like concat('%',concat(#{goodName,jdbcType=VARCHAR},'%'))
    </if>

    <choose>
      <when test="time == 1">
        order by create_time asc
      </when>
      <otherwise>
        <if test="time == 2">
          order by create_time desc
        </if>
      </otherwise>
    </choose>

    <choose>
      <when test="price == 1">
        order by second_price asc
      </when>
      <otherwise>
        <if test="price == 2">
          order by second_price desc
        </if>
      </otherwise>
    </choose>

    <choose>
      <when test="degree == 1">
        order by degree asc
      </when>
      <otherwise>
        <if test="degree == 2">
          order by degree desc
        </if>
      </otherwise>
    </choose>

    <choose>
      <when test="collect == 1">
        order by collect_number asc
      </when>
      <otherwise>
        <if test="collect == 2">
          order by collect_number desc
        </if>
      </otherwise>
    </choose>

    ) r
    where ROWNUM &lt;= #{pageSize} * #{currentPage}
    ) WHERE rn > #{pageSize} * ( #{currentPage} - 1)) t

  </select>

  <!--获取子类商品个数-->
  <select id="getSonGoodCount" resultType="java.lang.Integer" parameterType="java.lang.String" >
    select sum(1)
    from B_GOOD b
    <if test="sonId != null">
      where b.son_id = #{sonId,jdbcType=VARCHAR}
    </if>

    <if test="goodName != null">
      where good_Name
      like concat('%',concat(#{goodName,jdbcType=VARCHAR},'%'))
    </if>
  </select>

  <!--获取商品详情信息-->
  <select id="getGoodDetailByGoodId" resultMap="GoodMap" parameterType="java.lang.String" >
    select b.*, r.*
    from B_GOOD b
    left join RESOURCES r on b.good_id = r.source_id
    where good_id = #{goodId,jdbcType=VARCHAR}
  </select>

  <!--获取用户发布的所有商品-->
  <select id="getUserReleaseAllGood" resultMap="GoodMap" parameterType="java.lang.String" >
    select b.*, r.*
    from B_GOOD b
    left join RESOURCES r on b.good_id = r.source_id
    where USER_ID = #{userId,jdbcType=VARCHAR}
  </select>

  <!--获取商品详情信息，测试一对多级联,测试结果，传入的id不同-->
  <select id="selectByPrimaryKey" resultMap="TestGoodMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from B_GOOD
    where GOOD_ID = #{goodId,jdbcType=VARCHAR}
  </select>
  <!--种类商品数量统计报表-->
  <select id="getGoodTypeReport" resultType="java.util.Map">
    SELECT father_name, count(good_id) AS good_num
      from (select bf.*, bs.*, bd.*
              from B_GOOD_FATHER bf
              left join B_GOOD_SON bs
                on bf.father_id = bs.father_id
              left join B_GOOD bd
                on bs.son_id = bd.son_id
              <if test="isAdmin == false">
                where user_id = #{userId,jdbcType=VARCHAR}
              </if>
            )
     GROUP BY father_name
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from B_GOOD
    where GOOD_ID = #{goodId,jdbcType=VARCHAR}
  </delete>
  <!--删除商品-->
  <delete id="deleteGoodByGoodId" parameterType="java.lang.String" >
    delete from B_GOOD
      where GOOD_ID = #{goodId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xh.xiaoyiduo.admin.spgl.pojo.B_GOOD" >
    insert into B_GOOD (GOOD_ID, SON_ID, GOOD_NAME, 
      INFORMATION, ORIGIN_PRICE, SECOND_PRICE, 
      DEGREE, COLLECT_NUMBER, GOOD_NUMBER, 
      STATUS, USER_ID)
    values (#{goodId,jdbcType=VARCHAR}, #{sonId,jdbcType=VARCHAR}, #{goodName,jdbcType=VARCHAR}, 
      #{information,jdbcType=VARCHAR}, #{originPrice,jdbcType=FLOAT}, #{secondPrice,jdbcType=FLOAT}, 
      #{degree,jdbcType=VARCHAR}, #{collectNumber,jdbcType=DECIMAL}, #{goodNumber,jdbcType=DECIMAL}, 
      #{status,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xh.xiaoyiduo.admin.spgl.pojo.B_GOOD" >
    insert into B_GOOD
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="goodId != null" >
        GOOD_ID,
      </if>
      <if test="sonId != null" >
        SON_ID,
      </if>
      <if test="goodName != null" >
        GOOD_NAME,
      </if>
      <if test="information != null" >
        INFORMATION,
      </if>
      <if test="originPrice != null" >
        ORIGIN_PRICE,
      </if>
      <if test="secondPrice != null" >
        SECOND_PRICE,
      </if>
      <if test="degree != null" >
        DEGREE,
      </if>
      <if test="collectNumber != null" >
        COLLECT_NUMBER,
      </if>
      <if test="goodNumber != null" >
        GOOD_NUMBER,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="goodId != null" >
        #{goodId,jdbcType=VARCHAR},
      </if>
      <if test="sonId != null" >
        #{sonId,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null" >
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="information != null" >
        #{information,jdbcType=VARCHAR},
      </if>
      <if test="originPrice != null" >
        #{originPrice,jdbcType=FLOAT},
      </if>
      <if test="secondPrice != null" >
        #{secondPrice,jdbcType=FLOAT},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="collectNumber != null" >
        #{collectNumber,jdbcType=DECIMAL},
      </if>
      <if test="goodNumber != null" >
        #{goodNumber,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xh.xiaoyiduo.admin.spgl.pojo.B_GOOD" >
    update B_GOOD
    <set >
      <if test="sonId != null" >
        SON_ID = #{sonId,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null" >
        GOOD_NAME = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="information != null" >
        INFORMATION = #{information,jdbcType=VARCHAR},
      </if>
      <if test="originPrice != null" >
        ORIGIN_PRICE = #{originPrice,jdbcType=FLOAT},
      </if>
      <if test="secondPrice != null" >
        SECOND_PRICE = #{secondPrice,jdbcType=FLOAT},
      </if>
      <if test="degree != null" >
        DEGREE = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="collectNumber != null" >
        COLLECT_NUMBER = #{collectNumber,jdbcType=DECIMAL},
      </if>
      <if test="goodNumber != null" >
        GOOD_NUMBER = #{goodNumber,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=VARCHAR}
      </if>
    </set>
    where GOOD_ID = #{goodId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xh.xiaoyiduo.admin.spgl.pojo.B_GOOD" >
    update B_GOOD
    set SON_ID = #{sonId,jdbcType=VARCHAR},
      GOOD_NAME = #{goodName,jdbcType=VARCHAR},
      INFORMATION = #{information,jdbcType=VARCHAR},
      ORIGIN_PRICE = #{originPrice,jdbcType=FLOAT},
      SECOND_PRICE = #{secondPrice,jdbcType=FLOAT},
      DEGREE = #{degree,jdbcType=VARCHAR},
      COLLECT_NUMBER = #{collectNumber,jdbcType=DECIMAL},
      GOOD_NUMBER = #{goodNumber,jdbcType=DECIMAL},
      STATUS = #{status,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR}
    where GOOD_ID = #{goodId,jdbcType=VARCHAR}
  </update>
  <!--保存商品图片路径到资源表-->
  <insert id="saveGoodImageUrls" parameterType="java.lang.String" >
    insert into RESOURCES (RESOURCE_ID, TYPE, URL, SOURCE_ID)
    values(#{resourceId, jdbcType=VARCHAR}, #{type, jdbcType=VARCHAR},
     #{imgUrl, jdbcType=VARCHAR}, #{sonId, jdbcType=VARCHAR})
  </insert>
</mapper>